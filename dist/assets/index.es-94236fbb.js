import{aF as P,aP as M,aQ as O,aR as A,_ as S,aS as v}from"./index-a3470178.js";const T="wc",R="ethereum_provider",$=`${T}@2:${R}:`,j="https://rpc.walletconnect.org/v1/",f=["eth_sendTransaction","personal_sign"],q=["eth_accounts","eth_requestAccounts","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","eth_sendTransaction","personal_sign","wallet_switchEthereumChain","wallet_addEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode","wallet_sendCalls","wallet_getCapabilities","wallet_getCallsStatus","wallet_showCallsStatus"],E=["chainChanged","accountsChanged"],D=["chainChanged","accountsChanged","message","disconnect","connect"];var N=Object.defineProperty,Q=Object.defineProperties,U=Object.getOwnPropertyDescriptors,b=Object.getOwnPropertySymbols,L=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable,_=(a,s,e)=>s in a?N(a,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[s]=e,g=(a,s)=>{for(var e in s||(s={}))L.call(s,e)&&_(a,e,s[e]);if(b)for(var e of b(s))x.call(s,e)&&_(a,e,s[e]);return a},I=(a,s)=>Q(a,U(s)),h=(a,s,e)=>_(a,typeof s!="symbol"?s+"":s,e);function m(a){return Number(a[0].split(":")[1])}function u(a){return`0x${a.toString(16)}`}function z(a){const{chains:s,optionalChains:e,methods:t,optionalMethods:i,events:n,optionalEvents:c,rpcMap:l}=a;if(!v(s))throw new Error("Invalid chains");const r={chains:s,methods:t||f,events:n||E,rpcMap:g({},s.length?{[m(s)]:l[m(s)]}:{})},d=n==null?void 0:n.filter(p=>!E.includes(p)),o=t==null?void 0:t.filter(p=>!f.includes(p));if(!e&&!c&&!i&&!(d!=null&&d.length)&&!(o!=null&&o.length))return{required:s.length?r:void 0};const C=(d==null?void 0:d.length)&&(o==null?void 0:o.length)||!e,w={chains:[...new Set(C?r.chains.concat(e||[]):e)],methods:[...new Set(r.methods.concat(i!=null&&i.length?i:q))],events:[...new Set(r.events.concat(c!=null&&c.length?c:D))],rpcMap:l};return{required:s.length?r:void 0,optional:e.length?w:void 0}}class y{constructor(){h(this,"events",new P.EventEmitter),h(this,"namespace","eip155"),h(this,"accounts",[]),h(this,"signer"),h(this,"chainId",1),h(this,"modal"),h(this,"rpc"),h(this,"STORAGE_KEY",$),h(this,"on",(s,e)=>(this.events.on(s,e),this)),h(this,"once",(s,e)=>(this.events.once(s,e),this)),h(this,"removeListener",(s,e)=>(this.events.removeListener(s,e),this)),h(this,"off",(s,e)=>(this.events.off(s,e),this)),h(this,"parseAccount",s=>this.isCompatibleChainId(s)?this.parseAccountId(s).address:s),this.signer={},this.rpc={}}static async init(s){const e=new y;return await e.initialize(s),e}async request(s,e){return await this.signer.request(s,this.formatChainId(this.chainId),e)}sendAsync(s,e,t){this.signer.sendAsync(s,e,this.formatChainId(this.chainId),t)}get connected(){return this.signer.client?this.signer.client.core.relayer.connected:!1}get connecting(){return this.signer.client?this.signer.client.core.relayer.connecting:!1}async enable(){return this.session||await this.connect(),await this.request({method:"eth_requestAccounts"})}async connect(s){if(!this.signer.client)throw new Error("Provider not initialized. Call init() first");this.loadConnectOpts(s);const{required:e,optional:t}=z(this.rpc);try{const i=await new Promise(async(c,l)=>{var r;this.rpc.showQrModal&&((r=this.modal)==null||r.subscribeModal(o=>{!o.open&&!this.signer.session&&(this.signer.abortPairingAttempt(),l(new Error("Connection request reset. Please try again.")))}));const d=s!=null&&s.scopedProperties?{[this.namespace]:s.scopedProperties}:void 0;await this.signer.connect(I(g({namespaces:g({},e&&{[this.namespace]:e})},t&&{optionalNamespaces:{[this.namespace]:t}}),{pairingTopic:s==null?void 0:s.pairingTopic,scopedProperties:d})).then(o=>{c(o)}).catch(o=>{l(new Error(o.message))})});if(!i)return;const n=M(i.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:n),this.setAccounts(n),this.events.emit("connect",{chainId:u(this.chainId)})}catch(i){throw this.signer.logger.error(i),i}finally{this.modal&&this.modal.closeModal()}}async authenticate(s,e){if(!this.signer.client)throw new Error("Provider not initialized. Call init() first");this.loadConnectOpts({chains:s==null?void 0:s.chains});try{const t=await new Promise(async(n,c)=>{var l;this.rpc.showQrModal&&((l=this.modal)==null||l.subscribeModal(r=>{!r.open&&!this.signer.session&&(this.signer.abortPairingAttempt(),c(new Error("Connection request reset. Please try again.")))})),await this.signer.authenticate(I(g({},s),{chains:this.rpc.chains}),e).then(r=>{n(r)}).catch(r=>{c(new Error(r.message))})}),i=t.session;if(i){const n=M(i.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:n),this.setAccounts(n),this.events.emit("connect",{chainId:u(this.chainId)})}return t}catch(t){throw this.signer.logger.error(t),t}finally{this.modal&&this.modal.closeModal()}}async disconnect(){this.session&&await this.signer.disconnect(),this.reset()}get isWalletConnect(){return!0}get session(){return this.signer.session}registerEventListeners(){this.signer.on("session_event",s=>{const{params:e}=s,{event:t}=e;t.name==="accountsChanged"?(this.accounts=this.parseAccounts(t.data),this.events.emit("accountsChanged",this.accounts)):t.name==="chainChanged"?this.setChainId(this.formatChainId(t.data)):this.events.emit(t.name,t.data),this.events.emit("session_event",s)}),this.signer.on("chainChanged",s=>{const e=parseInt(s);this.chainId=e,this.events.emit("chainChanged",u(this.chainId)),this.persist()}),this.signer.on("session_update",s=>{this.events.emit("session_update",s)}),this.signer.on("session_delete",s=>{this.reset(),this.events.emit("session_delete",s),this.events.emit("disconnect",I(g({},O("USER_DISCONNECTED")),{data:s.topic,name:"USER_DISCONNECTED"}))}),this.signer.on("display_uri",s=>{var e,t;this.rpc.showQrModal&&((e=this.modal)==null||e.closeModal(),(t=this.modal)==null||t.openModal({uri:s})),this.events.emit("display_uri",s)})}switchEthereumChain(s){this.request({method:"wallet_switchEthereumChain",params:[{chainId:s.toString(16)}]})}isCompatibleChainId(s){return typeof s=="string"?s.startsWith(`${this.namespace}:`):!1}formatChainId(s){return`${this.namespace}:${s}`}parseChainId(s){return Number(s.split(":")[1])}setChainIds(s){const e=s.filter(t=>this.isCompatibleChainId(t)).map(t=>this.parseChainId(t));e.length&&(this.chainId=e[0],this.events.emit("chainChanged",u(this.chainId)),this.persist())}setChainId(s){if(this.isCompatibleChainId(s)){const e=this.parseChainId(s);this.chainId=e,this.switchEthereumChain(e)}}parseAccountId(s){const[e,t,i]=s.split(":");return{chainId:`${e}:${t}`,address:i}}setAccounts(s){this.accounts=s.filter(e=>this.parseChainId(this.parseAccountId(e).chainId)===this.chainId).map(e=>this.parseAccountId(e).address),this.events.emit("accountsChanged",this.accounts)}getRpcConfig(s){var e,t;const i=(e=s==null?void 0:s.chains)!=null?e:[],n=(t=s==null?void 0:s.optionalChains)!=null?t:[],c=i.concat(n);if(!c.length)throw new Error("No chains specified in either `chains` or `optionalChains`");const l=i.length?(s==null?void 0:s.methods)||f:[],r=i.length?(s==null?void 0:s.events)||E:[],d=(s==null?void 0:s.optionalMethods)||[],o=(s==null?void 0:s.optionalEvents)||[],C=(s==null?void 0:s.rpcMap)||this.buildRpcMap(c,s.projectId),w=(s==null?void 0:s.qrModalOptions)||void 0;return{chains:i==null?void 0:i.map(p=>this.formatChainId(p)),optionalChains:n.map(p=>this.formatChainId(p)),methods:l,events:r,optionalMethods:d,optionalEvents:o,rpcMap:C,showQrModal:!!(s!=null&&s.showQrModal),qrModalOptions:w,projectId:s.projectId,metadata:s.metadata}}buildRpcMap(s,e){const t={};return s.forEach(i=>{t[i]=this.getRpcUrl(i,e)}),t}async initialize(s){if(this.rpc=this.getRpcConfig(s),this.chainId=this.rpc.chains.length?m(this.rpc.chains):m(this.rpc.optionalChains),this.signer=await A.init({projectId:this.rpc.projectId,metadata:this.rpc.metadata,disableProviderPing:s.disableProviderPing,relayUrl:s.relayUrl,storage:s.storage,storageOptions:s.storageOptions,customStoragePrefix:s.customStoragePrefix,telemetryEnabled:s.telemetryEnabled,logger:s.logger}),this.registerEventListeners(),await this.loadPersistedSession(),this.rpc.showQrModal){let e;try{const{WalletConnectModal:t}=await S(()=>import("./index-0188322b.js").then(i=>i.i),["assets/index-0188322b.js","assets/index-a3470178.js","assets/index-1774331a.css"]);e=t}catch{throw new Error("To use QR modal, please install @walletconnect/modal package")}if(e)try{this.modal=new e(g({projectId:this.rpc.projectId},this.rpc.qrModalOptions))}catch(t){throw this.signer.logger.error(t),new Error("Could not generate WalletConnectModal Instance")}}}loadConnectOpts(s){if(!s)return;const{chains:e,optionalChains:t,rpcMap:i}=s;e&&v(e)&&(this.rpc.chains=e.map(n=>this.formatChainId(n)),e.forEach(n=>{this.rpc.rpcMap[n]=(i==null?void 0:i[n])||this.getRpcUrl(n)})),t&&v(t)&&(this.rpc.optionalChains=[],this.rpc.optionalChains=t==null?void 0:t.map(n=>this.formatChainId(n)),t.forEach(n=>{this.rpc.rpcMap[n]=(i==null?void 0:i[n])||this.getRpcUrl(n)}))}getRpcUrl(s,e){var t;return((t=this.rpc.rpcMap)==null?void 0:t[s])||`${j}?chainId=eip155:${s}&projectId=${e||this.rpc.projectId}`}async loadPersistedSession(){if(this.session)try{const s=await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`),e=this.session.namespaces[`${this.namespace}:${s}`]?this.session.namespaces[`${this.namespace}:${s}`]:this.session.namespaces[this.namespace];this.setChainIds(s?[this.formatChainId(s)]:e==null?void 0:e.accounts),this.setAccounts(e==null?void 0:e.accounts)}catch(s){this.signer.logger.error("Failed to load persisted session, clearing state..."),this.signer.logger.error(s),await this.disconnect().catch(e=>this.signer.logger.warn(e))}}reset(){this.chainId=1,this.accounts=[]}persist(){this.session&&this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`,this.chainId)}parseAccounts(s){return typeof s=="string"||s instanceof String?[this.parseAccount(s)]:s.map(e=>this.parseAccount(e))}}const W=y;export{W as EthereumProvider,D as OPTIONAL_EVENTS,q as OPTIONAL_METHODS,E as REQUIRED_EVENTS,f as REQUIRED_METHODS,y as default};
